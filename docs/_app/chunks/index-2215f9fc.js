import{W as g,Q as y,R as M,C as s}from"./vendor-b3472c31.js";var c={"4":{mandalaAddress:"0x5cEA8a30e54315dAe7d296A646FA149AA292EE97",multicallAddress:"0xb4ad66c931274235F2205d8a4330AA1Bf4F5177C",tonyAddress:"0xd5BD1C4e5eE4Dd379eB4DA485C80Ca4e00a460eC",NETWORK_ID:4},"31337":{mandalaAddress:"0x0165878A594ca255338adfa4d48449f69242Eb8F",multicallAddress:"0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",tonyAddress:"0x3B02fF1e626Ed7a8fd6eC5299e2C54e1421B626B",NETWORK_ID:31337}},T=[{inputs:[{internalType:"address",name:"dev_",type:"address"},{internalType:"string",name:"url_",type:"string"},{internalType:"uint256",name:"price_",type:"uint256"},{internalType:"uint256",name:"networkid_",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"tokenIdRef",type:"uint256"},{indexed:!1,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Join",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"LadderUp",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"_parent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"_referrer",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"dev",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"uint256",name:"deepLevel",type:"uint256"}],name:"getParent",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"id",type:"uint256"}],name:"getTokenNetwork",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenIdReferrer",type:"uint256"},{internalType:"string",name:"detail",type:"string"}],name:"mint",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"status",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"tokenByIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"tokenData",outputs:[{internalType:"uint256",name:"id",type:"uint256"},{internalType:"uint8",name:"status_",type:"uint8"},{internalType:"address",name:"owner",type:"address"},{internalType:"string",name:"detail",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"tokenIdCounter",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"index",type:"uint256"}],name:"tokenOfOwnerByIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"tonyNFT",outputs:[{internalType:"contract TonyRiosNFT",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"string",name:"detail",type:"string"}],name:"updateDetail",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"url_",type:"string"}],name:"updateUrl",outputs:[],stateMutability:"nonpayable",type:"function"}];const x={chainId:"0x7a69",chainName:"hardhat",nativeCurrency:{name:"ETH",symbol:"ETH",decimals:18},rpcUrls:["http://localhost:8545"]},A={chainId:"0x3",chainName:"Red de prueba Ropsten",nativeCurrency:{name:"ETH",symbol:"ETH",decimals:18},rpcUrls:["https://ropsten.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161"],blockExplorerUrls:["https://ropsten.etherscan.io"]},C={chainId:"0x4",chainName:"Red de prueba Rinkeby",nativeCurrency:{name:"ETH",symbol:"ETH",decimals:18},rpcUrls:["https://rinkeby.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161"],blockExplorerUrls:["https://rinkeby.etherscan.io"]},E={chainId:"0x61",chainName:"TEST Binance Smart Chain",nativeCurrency:{name:"BNB",symbol:"bnb",decimals:18},rpcUrls:["https://data-seed-prebsc-1-s1.binance.org:8545/"],blockExplorerUrls:["https://testnet.bscscan.com/"]},N={chainId:"0x63",chainName:"Matic Network",nativeCurrency:{name:"MATIC",symbol:"matic",decimals:18},rpcUrls:["https://rpc.slock.it/"],blockExplorerUrls:["https://maticscan.io/"]},F={chainId:"0x13881",chainName:"Mumbai Testnet",nativeCurrency:{name:"MATIC",symbol:"matic",decimals:18},rpcUrls:["https://rpc-mumbai.maticvigil.com"]};var d={hardhat:x,ropsten:A,rinkeby:C,binancetest:E,matic:N,mumbai:F};let r,u,a,l;const _=s(null),D=s(null),b=s(!1),f=s(0),w=s(!1),O=s(""),h={};async function p(){r||(r=new g(window.ethereum,"any"),u=new y.Provider(r),r.on("network",(m,o)=>{o&&setTimeout(()=>{p()},0)}),window.ethereum.on("accountsChanged",()=>{setTimeout(()=>{p()},0)})),w.set(!0);const t=await r.getSigner(),i=await t.getAddress();D.set(i),w.set(!1);const n=await r.getNetwork();if(_.set(n),c[String(n.chainId)])b.set(!1);else{b.set(!0);return}const{mandalaAddress:e,multicallAddress:v,tonyAddress:U,NETWORK_ID:k}=c[String(n.chainId)];O.set(e),y.setMulticallAddress(k,v),await u.init(),i&&(a=new M(e,T,t),h.telarNFT=a,l=new y.Contract(e,T),window.t=a);const I=await a.tokenIdCounter();f.set(I.toString()),!!a&&a.on("Transfer",async m=>{if(m==="0x0000000000000000000000000000000000000000"){const o=await a.tokenIdCounter();f.set(o.toString())}})}async function R(){await window.ethereum.enable(),await p()}async function S(t){if(!d[t])throw new Error("Invalid selected network");try{await window.ethereum.request({method:"wallet_addEthereumChain",params:[d[t]]})}catch{}window.ethereum.request({method:"wallet_switchEthereumChain",params:[{chainId:d[t].chainId}]})}async function H(t,i){await p();let n=[];for(let e=t;e<=i;e++)n.push(l.tokenData(e));try{return await u.all(n)}catch(e){console.log(e)}}async function W(t){await p();let n=(await h.telarNFT.getTokenNetwork(t)).map(e=>l.tokenData(e));try{return await u.all(n)}catch(e){console.log(e)}}export{D as a,h as b,S as c,f as d,O as e,W as f,H as g,p as i,R as l,_ as n,b as w};
